
# Create GitHub Action Secrets for your version of the application:
#   DEBRICKED_TOKEN should be an API Access Token from your Debricked tenant.

name: OpenText SCA Core
permissions:
    # required for all workflows
    security-events: write
    # required to fetch internal or private CodeQL packs
    packages: read
    # only required for workflows in private repositories
    actions: read
    contents: read
    
on:
  # Triggers the workflow on push or pull request events but only for the main and dev branches
  push:
    paths:
      - '**/requirements.txt'
    branches:
      - '**'        # matches every branch
  pull_request:
    branches: [ main, develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      runDebrickedScan:
        description: 'Scan using OpenText Core SCA'
        required: true
        default: 'true'

# Global environment variables
env:
  DEFAULT_APP_NAME: "InsecureWebApp"

jobs:

  Debricked-SCA:
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'push') || (github.event_name == 'pull_request') || (github.event.inputs.runDebrickedScan == 'true') }}
    steps:
      # Docker example - uncomment to use Docker instead of GitHub Action
      - uses: actions/checkout@v4
      - uses: debricked/fingerprint@v4
      - uses: debricked/resolve@v4
      - uses: debricked/actions@v4
        env:
          DEBRICKED_TOKEN: ${{ secrets.DEBRICKED_TOKEN }}
      # CLI example - uncomment to use CLI instead of GitHub Action
      #- name: Download Debricked CLI
      #  run: curl -L https://github.com/debricked/cli/releases/latest/download/cli_linux_x86_64.tar.gz | tar -xz debricked
      #- name: Run Debricked scan
      #  run: ./debricked scan -r "${APP_NAME}" --access-token="${DEBRICKED_TOKEN}"  -e "*/**.lock" -e "**/build/classes/test/**" -e "**/target/classes/test-classes/**" .
      #  env:
      #    APP_NAME: ${{ env.DEFAULT_APP_NAME }}
      #    DEBRICKED_TOKEN: ${{ secrets.DEBRICKED_TOKEN }}
